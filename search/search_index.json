{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"OuterSpace Strapi-Meduda Plugin","text":"<p>This is a pure content</p>"},{"location":"code_of_conduct/","title":"Code of Conduct","text":""},{"location":"code_of_conduct/#our-pledge","title":"Our Pledge","text":"<p>In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We are committed to ensuring that our community is a place where people can come together to contribute, collaborate, and grow.</p>"},{"location":"code_of_conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to creating a positive environment include:</p> <ul> <li>Using welcoming and inclusive language.</li> <li>Being respectful of differing viewpoints and experiences.</li> <li>Gracefully accepting constructive criticism.</li> <li>Focusing on what is best for the community.</li> <li>Showing empathy towards other community members.</li> </ul> <p>Examples of unacceptable behavior by participants include:</p> <ul> <li>The use of sexualized language or imagery and unwelcome sexual attention or advances.</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks.</li> <li>Public or private harassment.</li> <li>Publishing others' private information, such as a physical or electronic address, without explicit permission.</li> <li>Other conduct which could reasonably be considered inappropriate in a professional setting.</li> </ul>"},{"location":"code_of_conduct/#our-responsibilities","title":"Our Responsibilities","text":"<p>Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.</p> <p>Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned with this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.</p>"},{"location":"code_of_conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project email address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.</p>"},{"location":"code_of_conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team (see footer). All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.</p> <p>Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.</p>"},{"location":"code_of_conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.</p>"},{"location":"contributing/","title":"Contribution Guidelines","text":"<p>We welcome contributions from the community! Contributions can take many forms, such as code, documentation, bug reports, or feature requests. However, please note the following restrictions and guidelines before contributing.</p>"},{"location":"contributing/#license-and-contribution-terms","title":"License and Contribution Terms","text":"<ul> <li>Non-commercial use: All contributions will fall under the non-commercial use restrictions of the current CoopyrightCode Light License (v1.1). This means that any code, documentation, or other contributions must only be used in projects or contexts where no commercial benefit is derived.</li> <li>License agreement: By contributing, you agree to be bound by the CoopyrightCode Light License terms. This includes the prohibition of commercial use and the understanding that a future version of the license may introduce additional terms regarding commercial use, blockchain-based contribution tracking, and remuneration.</li> </ul> <p>If you are unsure whether your contribution aligns with the license or need clarification, please feel free to contact the project maintainers before submitting a contribution.</p>"},{"location":"contributing/#how-to-contribute","title":"How to Contribute","text":"<p>To ensure smooth collaboration, please follow the steps outlined below when contributing to this project.</p>"},{"location":"contributing/#1-fork-the-repository","title":"1. Fork the Repository","text":"<p>Start by forking the repository to create your own copy. This allows you to work on your changes independently of the main project:</p> <ul> <li>Visit the main repository page and click the Fork button in the top right corner.</li> <li>This will create a copy of the repository under your GitHub account where you can make your changes.</li> </ul>"},{"location":"contributing/#2-create-a-new-branch","title":"2. Create a New Branch","text":"<p>It is a good practice to create a new branch for each feature or fix you're working on, rather than committing directly to the main branch of your forked repository. This makes it easier to manage changes and helps maintain the cleanliness of your Git history.</p> <p>To create a new branch:</p> <pre><code>git checkout -b your-branch-name\n</code></pre> <p>Make sure to choose a descriptive name for your branch, such as <code>feature-add-docs</code> or <code>fix-bug-issue123</code>.</p>"},{"location":"contributing/#3-make-your-changes","title":"3. Make Your Changes","text":"<p>Once your branch is set up, you can start making changes to the codebase, documentation, or other aspects of the project. Be sure to:</p> <ul> <li>Follow the project's coding style and conventions.</li> <li>Include clear and descriptive commit messages.</li> <li>Write tests if necessary, especially when submitting code changes.</li> <li>Ensure that your code or documentation aligns with the non-commercial terms of the CoopyrightCode Light License.</li> </ul>"},{"location":"contributing/#4-submit-a-pull-request","title":"4. Submit a Pull Request","text":"<p>When you're ready to submit your changes, follow these steps:</p> <ul> <li> <p>Push your changes: First, push your changes to your forked repository:</p> <pre><code>git push origin your-branch-name\n</code></pre> </li> <li> <p>Open a pull request: Visit the original repository (not your fork) and open a pull request (PR) from your branch. Be sure to include a descriptive title and a clear explanation of the changes you've made in the PR description.</p> </li> </ul> <p>In the PR description, please also include:</p> <ul> <li>A reference to any related issues or tickets (if applicable).</li> <li>Any context or reasoning behind the changes, especially if they might impact other parts of the project.</li> </ul> <p>Example of a clear PR description</p> <pre><code>## Description\nThis PR adds new documentation for the contribution process and fixes minor typos in the README file.\n\n## Related Issue\nFixes issue #123\n\n## Context\nThe documentation was outdated and needed to be updated to reflect the current workflow.\n</code></pre> <p>Be patient</p> <p>Once your pull request is submitted, the maintainers will review it and may ask for additional changes or clarifications. Please be patient as the review process takes time, and respond to any feedback you receive.</p>"},{"location":"contributing/#5-respond-to-feedback","title":"5. Respond to Feedback","text":"<p>During the review process, maintainers may request changes or ask for additional explanations. It's important to:</p> <ul> <li>Address feedback in a timely manner.</li> <li>Push additional commits to your branch to update your pull request.</li> <li>Communicate if you're unable to make the requested changes.</li> </ul> <p>Once the pull request is approved, it will be merged into the main repository. You will be credited for your contribution!</p>"},{"location":"contributing/#code-of-conduct","title":"Code of Conduct","text":"<p>We expect all contributors to follow our Code of Conduct when interacting with the project. This includes respecting others' opinions, being considerate in your communications, and ensuring a welcoming and collaborative environment for all contributors.</p>"},{"location":"contributing/#good-practices-for-contributors","title":"Good Practices for Contributors","text":"<p>Here are a few additional best practices to keep in mind when contributing:</p> <ul> <li> <p>Write clear commit messages: Each commit should have a clear message that describes the purpose of the changes. This helps others (and your future self) understand what each commit does.     Example: <code>Fix typo in README.md</code> or <code>Add unit tests for User model</code>.</p> </li> <li> <p>Test your changes: If you're submitting code changes, be sure to test them thoroughly. If the project has automated tests, run them to ensure your changes don't break existing functionality.</p> </li> <li> <p>Document your changes: If you're adding new features or making significant changes to the codebase, update the relevant documentation. This ensures that other contributors and users of the project can understand how to use the new functionality.</p> </li> <li> <p>Respect the non-commercial license: Ensure that your contributions align with the CoopyrightCode Light License terms. If you're unsure whether something qualifies as \"non-commercial,\" feel free to ask the maintainers for clarification.</p> </li> </ul> <p>Thank you for your interest in contributing to this project! Your contributions help improve the project and expand its usefulness to the community. We look forward to collaborating with you.</p>"},{"location":"license/","title":"CoopyrightCode Light License v1.1","text":"<p>This license grants free, non-commercial use of the code under the conditions outlined below. The code is provided without warranty or maintenance, and users are informed that a complete version of this license will be published later, with more detailed terms, including contribution traceability and remuneration.</p> <p>Reference</p> <p>Read the full license</p>"},{"location":"license/#1-granted-rights","title":"1. Granted Rights","text":"<p>Under this license, users are allowed to:</p> <ul> <li>Use, copy, modify, and distribute the source code for non-commercial purposes only.</li> <li>Create derivative works from the source code for non-commercial purposes.</li> </ul>"},{"location":"license/#2-prohibition-of-commercial-use","title":"2. Prohibition of Commercial Use","text":"<ul> <li>Users are not permitted to use the code or its derivatives for commercial purposes.</li> <li>Any commercial use requires a separate license, which will be provided in the complete version of the CoopyrightCode License.</li> </ul>"},{"location":"license/#3-user-obligations","title":"3. User Obligations","text":"<p>When using the code under this license, the user must:</p> <ul> <li>Attribute the original author and include a link to the original repository or license in all copies or derivatives of the code.</li> <li>Not remove or alter copyright notices or any other legal notices.</li> </ul>"},{"location":"license/#4-no-warranty-and-no-maintenance","title":"4. No Warranty and No Maintenance","text":"<p>The code is provided <code>as-is</code>, without any warranties, express or implied, including but not limited to warranties of merchantability, fitness for a particular purpose, or non-infringement of third-party rights. The authors or copyright holders provide no maintenance or support for the code distributed under this license.</p>"},{"location":"license/#5-limitation-of-liability","title":"5. Limitation of Liability","text":"<p>The authors or copyright holders cannot be held liable for any damages, direct or indirect, arising from the use of the code under this license.</p>"},{"location":"license/#6-license-evolution","title":"6. License Evolution","text":"<p>Users are informed that a complete version of this license, incorporating contribution traceability via blockchain and remuneration based on the value of contributions, will be published in the future. This future version may impose additional conditions, particularly for allowing commercial use under specific terms.</p>"},{"location":"plugins/medusa/","title":"Medusa Plugin for Strapi","text":"<p>This plugin facilitates the communication between Medusa and Strapi. It allows Medusa to send product data, categories, and other objects to Strapi for further manipulation and extension. Medusa remains the source of truth for core ecommerce data (pricing, inventory, etc.), while Strapi enables advanced content management.</p>"},{"location":"plugins/medusa/#key-features","title":"Key Features","text":"<ul> <li>Synchronizes Medusa's core objects such as products, categories, and orders into Strapi.</li> <li>Enables automatic updates of Strapi content when data changes in Medusa.</li> <li>Facilitates the transmission of product-related data from Medusa to Strapi.</li> </ul>"},{"location":"plugins/strapi/","title":"Strapi plugin for Medusa","text":"<p>This plugin pulls data from Medusa into Strapi, where the data can be enriched. Strapi allows for the management of internationalized content (i18n), detailed product descriptions, and media like images, creating a richer and more versatile CMS experience.</p>"},{"location":"plugins/strapi/#key-features","title":"Key Features","text":"<ul> <li>Fetches Medusa data into Strapi for extended content management.</li> <li>Allows users to manage multilingual content (i18n) for Medusa products.</li> <li>Supports handling of images and product media, leveraging Strapi's robust media capabilities.</li> <li>Adds custom fields and attributes to Medusa objects within Strapi for enhanced product sheets.</li> </ul>"}]}